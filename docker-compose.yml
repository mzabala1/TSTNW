version: '3'
volumes:
  pgdata:
services:
  postgres:
    image: postgres:10.6
    hostname: db
    environment:
      POSTGRES_USER:
        tstnwadmin
      POSTGRES_PASS:
        tstnwadminpass
      POSTGRES_DB:
        tstnwdb
    volumes:
      - pgdata:/var/lib/postgresql/data
    # sudo docker exec -it [ID Contenedor de Docker] python /TSTNW/manage.py createsuperuser
  tstnwapp:
    image: python:3.6.8
    hostname: tstnwapp
    volumes:
      - ../TSTNW:/TSTNW
    expose:
      - "8000"
    command: >
      bash -c "cd /TSTNW && pip install -r requirements.txt && python manage.py makemigrations && python manage.py migrate && python manage.py collectstatic --noinput && gunicorn --bind :8000 TSTNW.wsgi"
    depends_on:
      - postgres

  nginx:
    image: nginx:1.13
    ports: # <-- Cambiar a 80:80 luego en prod
      - 8000:8000
    volumes:
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - ./static:/static
      - ./tstnwvirtualenv/lib/python3.6/site-packages/rest_framework/static/rest_framework:/static/rest_framework
      - ./tstnwvirtualenv/lib/python3.6/site-packages/django/contrib/admin/static/admin:/static/admin #Corregit esto para prod porque no va a coger los static de un virtualenv en producciÃ³n
    depends_on:
      - tstnwapp

networks:
  nginx_network:
    driver: bridge
